/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <0 2>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <6 7>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <6 7 8>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <19 18 17>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_aa {
            bindings = <&kp RA(W)>;
            key-positions = <8 9>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_ae {
            bindings = <&kp RA(A)>;
            key-positions = <18 19>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_question {
            bindings = <&kp QUESTION>;
            key-positions = <27 26>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_slash {
            bindings = <&kp SLASH>;
            key-positions = <27 28>;
            layers = <0 1>;
            timeout-ms = <30>;
        };

        combo_capsword {
            bindings = <&caps_word>;
            key-positions = <12 17>;
            layers = <0 1>;
            timeout-ms = <30>;
        };
    };
};

&mt { tapping-term-ms = <400>; };

/ {
    behaviors {
        semicolon: semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMICOLON";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        colon: colon {
            compatible = "zmk,behavior-mod-morph";
            label = "COLON";
            bindings = <&kp DOT>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        plus_equals: plus_equals {
            compatible = "zmk,behavior-hold-tap";
            label = "PLUS_EQUALS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W  &kp E        &kp R            &kp T  &kp Y      &kp U  &kp I            &kp O   &kp P
&lt 3 A    &kp S  &mt LSHFT D  &kp F            &kp G  &kp H      &kp J  &mt RSHFT K      &kp L   &kp RA(O)
&kp Z      &kp X  &kp C        &kp V            &kp B  &kp N      &kp M  &semicolon       &colon  &kp SLASH
&kp LCTRL         &kp LALT     &lt 2 BACKSPACE  &none  &kp SPACE         &kp PRINTSCREEN          &kp LGUI
            >;
        };

        mac_layer {
            bindings = <
&kp Q     &kp W  &kp E        &kp R            &kp T  &kp Y      &kp U  &kp I           &kp O   &kp P
&lt 3 A   &kp S  &mt LSHFT D  &kp F            &kp G  &kp H      &kp J  &mt RSHFT K     &kp L   &kp RA(O)
&kp Z     &kp X  &kp C        &kp V            &kp B  &kp N      &kp M  &semicolon      &colon  &kp SLASH
&kp LCMD         &kp LALT     &lt 2 BACKSPACE  &none  &kp SPACE         &kp LS(LG(N5))          &kp LCTRL
            >;
        };

        num_sym {
            bindings = <
&kp EXCL   &kp AT     &kp HASH       &kp DOLLAR  &kp PERCENT     &kp CARET        &kp AMPERSAND  &kp ASTERISK      &kp GRAVE                &kp BACKSLASH
&kp N1     &kp N2     &kp N3         &kp N4      &kp N5          &kp N6           &kp N7         &kp N8            &kp N9                   &kp N0
&kp MINUS  &kp UNDER  &kp LESS_THAN  &kp LPAR    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RPAR       &kp GREATER_THAN  &plus_equals PLUS EQUAL  &trans
&trans                &kp LS(LA(S))  &trans      &trans          &trans                          &trans                                     &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp LG(LEFT)  &kp UP     &kp LG(RIGHT)  &trans     &trans    &trans  &trans  &trans  &trans
&trans  &kp LEFT      &kp DOWN   &kp RIGHT      &kp END    &trans    &trans  &trans  &trans  &trans
&trans  &kp LC(X)     &kp LC(C)  &kp LC(V)      &kp LC(Z)  &trans    &trans  &trans  &trans  &trans
&trans                &kp CAPS   &kp LBKT       &trans     &kp RBKT          &trans          &trans
            >;
        };

        nav_mac {
            bindings = <
&trans  &kp LC(LEFT)  &trans     &kp LC(RIGHT)  &trans               &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans     &trans         &kp LG(RIGHT_ARROW)  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(X)     &kp LG(C)  &kp LG(V)      &kp LG(Z)            &trans  &trans  &trans  &trans  &trans
&trans                &trans     &trans         &trans               &trans          &trans          &trans
            >;
        };

        f_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans          &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mac_navigation {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
